// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: seven_day.proto

#include "seven_day.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_seven_5fday_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MsgFriend_seven_5fday_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_seven_5fday_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MsgPlayer_seven_5fday_2eproto;
namespace fluyii_game {
class MsgInt64ListDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MsgInt64List> _instance;
} _MsgInt64List_default_instance_;
class MsgPlayerDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MsgPlayer> _instance;
} _MsgPlayer_default_instance_;
class MsgFriendDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MsgFriend> _instance;
} _MsgFriend_default_instance_;
class MsgSevenRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MsgSevenResp> _instance;
} _MsgSevenResp_default_instance_;
}  // namespace fluyii_game
static void InitDefaultsscc_info_MsgFriend_seven_5fday_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::fluyii_game::_MsgFriend_default_instance_;
    new (ptr) ::fluyii_game::MsgFriend();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fluyii_game::MsgFriend::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MsgFriend_seven_5fday_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MsgFriend_seven_5fday_2eproto}, {}};

static void InitDefaultsscc_info_MsgInt64List_seven_5fday_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::fluyii_game::_MsgInt64List_default_instance_;
    new (ptr) ::fluyii_game::MsgInt64List();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fluyii_game::MsgInt64List::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MsgInt64List_seven_5fday_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MsgInt64List_seven_5fday_2eproto}, {}};

static void InitDefaultsscc_info_MsgPlayer_seven_5fday_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::fluyii_game::_MsgPlayer_default_instance_;
    new (ptr) ::fluyii_game::MsgPlayer();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fluyii_game::MsgPlayer::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MsgPlayer_seven_5fday_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MsgPlayer_seven_5fday_2eproto}, {}};

static void InitDefaultsscc_info_MsgSevenResp_seven_5fday_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::fluyii_game::_MsgSevenResp_default_instance_;
    new (ptr) ::fluyii_game::MsgSevenResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fluyii_game::MsgSevenResp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_MsgSevenResp_seven_5fday_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_MsgSevenResp_seven_5fday_2eproto}, {
      &scc_info_MsgPlayer_seven_5fday_2eproto.base,
      &scc_info_MsgFriend_seven_5fday_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_seven_5fday_2eproto[4];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_seven_5fday_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_seven_5fday_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_seven_5fday_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::fluyii_game::MsgInt64List, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::fluyii_game::MsgInt64List, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::fluyii_game::MsgInt64List, ids_),
  ~0u,
  PROTOBUF_FIELD_OFFSET(::fluyii_game::MsgPlayer, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::fluyii_game::MsgPlayer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::fluyii_game::MsgPlayer, player_id_),
  PROTOBUF_FIELD_OFFSET(::fluyii_game::MsgPlayer, player_name_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::fluyii_game::MsgFriend, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::fluyii_game::MsgFriend, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::fluyii_game::MsgFriend, friend_intimate_),
  PROTOBUF_FIELD_OFFSET(::fluyii_game::MsgFriend, lv_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::fluyii_game::MsgSevenResp, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::fluyii_game::MsgSevenResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::fluyii_game::MsgSevenResp, player_id_),
  PROTOBUF_FIELD_OFFSET(::fluyii_game::MsgSevenResp, player_name_),
  PROTOBUF_FIELD_OFFSET(::fluyii_game::MsgSevenResp, records_),
  PROTOBUF_FIELD_OFFSET(::fluyii_game::MsgSevenResp, others_),
  PROTOBUF_FIELD_OFFSET(::fluyii_game::MsgSevenResp, friend__),
  PROTOBUF_FIELD_OFFSET(::fluyii_game::MsgSevenResp, money_),
  3,
  0,
  ~0u,
  ~0u,
  1,
  2,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::fluyii_game::MsgInt64List)},
  { 7, 14, sizeof(::fluyii_game::MsgPlayer)},
  { 16, 23, sizeof(::fluyii_game::MsgFriend)},
  { 25, 36, sizeof(::fluyii_game::MsgSevenResp)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::fluyii_game::_MsgInt64List_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::fluyii_game::_MsgPlayer_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::fluyii_game::_MsgFriend_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::fluyii_game::_MsgSevenResp_default_instance_),
};

const char descriptor_table_protodef_seven_5fday_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\017seven_day.proto\022\013fluyii_game\"\033\n\014MsgInt"
  "64List\022\013\n\003ids\030\001 \003(\003\"3\n\tMsgPlayer\022\021\n\tplay"
  "er_id\030\001 \002(\003\022\023\n\013player_name\030\002 \002(\t\"0\n\tMsgF"
  "riend\022\027\n\017friend_intimate\030\001 \002(\005\022\n\n\002lv\030\002 \002"
  "(\005\"\246\001\n\014MsgSevenResp\022\021\n\tplayer_id\030\001 \002(\005\022\023"
  "\n\013player_name\030\002 \002(\t\022\017\n\007records\030\003 \003(\005\022&\n\006"
  "others\030\004 \003(\0132\026.fluyii_game.MsgPlayer\022&\n\006"
  "friend\030\005 \002(\0132\026.fluyii_game.MsgFriend\022\r\n\005"
  "money\030\006 \002(\001"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_seven_5fday_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_seven_5fday_2eproto_sccs[4] = {
  &scc_info_MsgFriend_seven_5fday_2eproto.base,
  &scc_info_MsgInt64List_seven_5fday_2eproto.base,
  &scc_info_MsgPlayer_seven_5fday_2eproto.base,
  &scc_info_MsgSevenResp_seven_5fday_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_seven_5fday_2eproto_once;
static bool descriptor_table_seven_5fday_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_seven_5fday_2eproto = {
  &descriptor_table_seven_5fday_2eproto_initialized, descriptor_table_protodef_seven_5fday_2eproto, "seven_day.proto", 331,
  &descriptor_table_seven_5fday_2eproto_once, descriptor_table_seven_5fday_2eproto_sccs, descriptor_table_seven_5fday_2eproto_deps, 4, 0,
  schemas, file_default_instances, TableStruct_seven_5fday_2eproto::offsets,
  file_level_metadata_seven_5fday_2eproto, 4, file_level_enum_descriptors_seven_5fday_2eproto, file_level_service_descriptors_seven_5fday_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_seven_5fday_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_seven_5fday_2eproto), true);
namespace fluyii_game {

// ===================================================================

void MsgInt64List::InitAsDefaultInstance() {
}
class MsgInt64List::_Internal {
 public:
  using HasBits = decltype(std::declval<MsgInt64List>()._has_bits_);
};

MsgInt64List::MsgInt64List()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fluyii_game.MsgInt64List)
}
MsgInt64List::MsgInt64List(const MsgInt64List& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      ids_(from.ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:fluyii_game.MsgInt64List)
}

void MsgInt64List::SharedCtor() {
}

MsgInt64List::~MsgInt64List() {
  // @@protoc_insertion_point(destructor:fluyii_game.MsgInt64List)
  SharedDtor();
}

void MsgInt64List::SharedDtor() {
}

void MsgInt64List::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MsgInt64List& MsgInt64List::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MsgInt64List_seven_5fday_2eproto.base);
  return *internal_default_instance();
}


void MsgInt64List::Clear() {
// @@protoc_insertion_point(message_clear_start:fluyii_game.MsgInt64List)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ids_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MsgInt64List::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated int64 ids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<8>(ptr));
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_ids(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MsgInt64List::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fluyii_game.MsgInt64List)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 ids = 1;
  for (int i = 0, n = this->_internal_ids_size(); i < n; i++) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_ids(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fluyii_game.MsgInt64List)
  return target;
}

size_t MsgInt64List::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fluyii_game.MsgInt64List)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 ids = 1;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int64Size(this->ids_);
    total_size += 1 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_ids_size());
    total_size += data_size;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgInt64List::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fluyii_game.MsgInt64List)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgInt64List* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MsgInt64List>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fluyii_game.MsgInt64List)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fluyii_game.MsgInt64List)
    MergeFrom(*source);
  }
}

void MsgInt64List::MergeFrom(const MsgInt64List& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fluyii_game.MsgInt64List)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ids_.MergeFrom(from.ids_);
}

void MsgInt64List::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fluyii_game.MsgInt64List)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgInt64List::CopyFrom(const MsgInt64List& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fluyii_game.MsgInt64List)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgInt64List::IsInitialized() const {
  return true;
}

void MsgInt64List::InternalSwap(MsgInt64List* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ids_.InternalSwap(&other->ids_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgInt64List::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MsgPlayer::InitAsDefaultInstance() {
}
class MsgPlayer::_Internal {
 public:
  using HasBits = decltype(std::declval<MsgPlayer>()._has_bits_);
  static void set_has_player_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_player_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

MsgPlayer::MsgPlayer()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fluyii_game.MsgPlayer)
}
MsgPlayer::MsgPlayer(const MsgPlayer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  player_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_player_name()) {
    player_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.player_name_);
  }
  player_id_ = from.player_id_;
  // @@protoc_insertion_point(copy_constructor:fluyii_game.MsgPlayer)
}

void MsgPlayer::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MsgPlayer_seven_5fday_2eproto.base);
  player_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  player_id_ = PROTOBUF_LONGLONG(0);
}

MsgPlayer::~MsgPlayer() {
  // @@protoc_insertion_point(destructor:fluyii_game.MsgPlayer)
  SharedDtor();
}

void MsgPlayer::SharedDtor() {
  player_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void MsgPlayer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MsgPlayer& MsgPlayer::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MsgPlayer_seven_5fday_2eproto.base);
  return *internal_default_instance();
}


void MsgPlayer::Clear() {
// @@protoc_insertion_point(message_clear_start:fluyii_game.MsgPlayer)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    player_name_.ClearNonDefaultToEmptyNoArena();
  }
  player_id_ = PROTOBUF_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MsgPlayer::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required int64 player_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_player_id(&has_bits);
          player_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required string player_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(_internal_mutable_player_name(), ptr, ctx, "fluyii_game.MsgPlayer.player_name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MsgPlayer::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fluyii_game.MsgPlayer)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 player_id = 1;
  if (cached_has_bits & 0x00000002u) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_player_id(), target);
  }

  // required string player_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_player_name().data(), static_cast<int>(this->_internal_player_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "fluyii_game.MsgPlayer.player_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_player_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fluyii_game.MsgPlayer)
  return target;
}

size_t MsgPlayer::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:fluyii_game.MsgPlayer)
  size_t total_size = 0;

  if (has_player_name()) {
    // required string player_name = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_player_name());
  }

  if (has_player_id()) {
    // required int64 player_id = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_player_id());
  }

  return total_size;
}
size_t MsgPlayer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fluyii_game.MsgPlayer)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string player_name = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_player_name());

    // required int64 player_id = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_player_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgPlayer::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fluyii_game.MsgPlayer)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgPlayer* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MsgPlayer>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fluyii_game.MsgPlayer)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fluyii_game.MsgPlayer)
    MergeFrom(*source);
  }
}

void MsgPlayer::MergeFrom(const MsgPlayer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fluyii_game.MsgPlayer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      player_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.player_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      player_id_ = from.player_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MsgPlayer::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fluyii_game.MsgPlayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgPlayer::CopyFrom(const MsgPlayer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fluyii_game.MsgPlayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgPlayer::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void MsgPlayer::InternalSwap(MsgPlayer* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  player_name_.Swap(&other->player_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(player_id_, other->player_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgPlayer::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MsgFriend::InitAsDefaultInstance() {
}
class MsgFriend::_Internal {
 public:
  using HasBits = decltype(std::declval<MsgFriend>()._has_bits_);
  static void set_has_friend_intimate(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_lv(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

MsgFriend::MsgFriend()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fluyii_game.MsgFriend)
}
MsgFriend::MsgFriend(const MsgFriend& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&friend_intimate_, &from.friend_intimate_,
    static_cast<size_t>(reinterpret_cast<char*>(&lv_) -
    reinterpret_cast<char*>(&friend_intimate_)) + sizeof(lv_));
  // @@protoc_insertion_point(copy_constructor:fluyii_game.MsgFriend)
}

void MsgFriend::SharedCtor() {
  ::memset(&friend_intimate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lv_) -
      reinterpret_cast<char*>(&friend_intimate_)) + sizeof(lv_));
}

MsgFriend::~MsgFriend() {
  // @@protoc_insertion_point(destructor:fluyii_game.MsgFriend)
  SharedDtor();
}

void MsgFriend::SharedDtor() {
}

void MsgFriend::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MsgFriend& MsgFriend::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MsgFriend_seven_5fday_2eproto.base);
  return *internal_default_instance();
}


void MsgFriend::Clear() {
// @@protoc_insertion_point(message_clear_start:fluyii_game.MsgFriend)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&friend_intimate_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&lv_) -
        reinterpret_cast<char*>(&friend_intimate_)) + sizeof(lv_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MsgFriend::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required int32 friend_intimate = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_friend_intimate(&has_bits);
          friend_intimate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required int32 lv = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_lv(&has_bits);
          lv_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MsgFriend::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fluyii_game.MsgFriend)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 friend_intimate = 1;
  if (cached_has_bits & 0x00000001u) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_friend_intimate(), target);
  }

  // required int32 lv = 2;
  if (cached_has_bits & 0x00000002u) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_lv(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fluyii_game.MsgFriend)
  return target;
}

size_t MsgFriend::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:fluyii_game.MsgFriend)
  size_t total_size = 0;

  if (has_friend_intimate()) {
    // required int32 friend_intimate = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_friend_intimate());
  }

  if (has_lv()) {
    // required int32 lv = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_lv());
  }

  return total_size;
}
size_t MsgFriend::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fluyii_game.MsgFriend)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 friend_intimate = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_friend_intimate());

    // required int32 lv = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_lv());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgFriend::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fluyii_game.MsgFriend)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgFriend* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MsgFriend>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fluyii_game.MsgFriend)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fluyii_game.MsgFriend)
    MergeFrom(*source);
  }
}

void MsgFriend::MergeFrom(const MsgFriend& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fluyii_game.MsgFriend)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      friend_intimate_ = from.friend_intimate_;
    }
    if (cached_has_bits & 0x00000002u) {
      lv_ = from.lv_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MsgFriend::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fluyii_game.MsgFriend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgFriend::CopyFrom(const MsgFriend& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fluyii_game.MsgFriend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgFriend::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void MsgFriend::InternalSwap(MsgFriend* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(friend_intimate_, other->friend_intimate_);
  swap(lv_, other->lv_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgFriend::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MsgSevenResp::InitAsDefaultInstance() {
  ::fluyii_game::_MsgSevenResp_default_instance_._instance.get_mutable()->friend__ = const_cast< ::fluyii_game::MsgFriend*>(
      ::fluyii_game::MsgFriend::internal_default_instance());
}
class MsgSevenResp::_Internal {
 public:
  using HasBits = decltype(std::declval<MsgSevenResp>()._has_bits_);
  static void set_has_player_id(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_player_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::fluyii_game::MsgFriend& friend_(const MsgSevenResp* msg);
  static void set_has_friend_(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_money(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::fluyii_game::MsgFriend&
MsgSevenResp::_Internal::friend_(const MsgSevenResp* msg) {
  return *msg->friend__;
}
MsgSevenResp::MsgSevenResp()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:fluyii_game.MsgSevenResp)
}
MsgSevenResp::MsgSevenResp(const MsgSevenResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      records_(from.records_),
      others_(from.others_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  player_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_player_name()) {
    player_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.player_name_);
  }
  if (from._internal_has_friend_()) {
    friend__ = new ::fluyii_game::MsgFriend(*from.friend__);
  } else {
    friend__ = nullptr;
  }
  ::memcpy(&money_, &from.money_,
    static_cast<size_t>(reinterpret_cast<char*>(&player_id_) -
    reinterpret_cast<char*>(&money_)) + sizeof(player_id_));
  // @@protoc_insertion_point(copy_constructor:fluyii_game.MsgSevenResp)
}

void MsgSevenResp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MsgSevenResp_seven_5fday_2eproto.base);
  player_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&friend__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&player_id_) -
      reinterpret_cast<char*>(&friend__)) + sizeof(player_id_));
}

MsgSevenResp::~MsgSevenResp() {
  // @@protoc_insertion_point(destructor:fluyii_game.MsgSevenResp)
  SharedDtor();
}

void MsgSevenResp::SharedDtor() {
  player_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete friend__;
}

void MsgSevenResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MsgSevenResp& MsgSevenResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MsgSevenResp_seven_5fday_2eproto.base);
  return *internal_default_instance();
}


void MsgSevenResp::Clear() {
// @@protoc_insertion_point(message_clear_start:fluyii_game.MsgSevenResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  records_.Clear();
  others_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      player_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(friend__ != nullptr);
      friend__->Clear();
    }
  }
  if (cached_has_bits & 0x0000000cu) {
    ::memset(&money_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&player_id_) -
        reinterpret_cast<char*>(&money_)) + sizeof(player_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MsgSevenResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required int32 player_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_player_id(&has_bits);
          player_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required string player_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(_internal_mutable_player_name(), ptr, ctx, "fluyii_game.MsgSevenResp.player_name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated int32 records = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_records(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<24>(ptr));
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_records(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .fluyii_game.MsgPlayer others = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_others(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // required .fluyii_game.MsgFriend friend = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_friend_(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required double money = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 49)) {
          _Internal::set_has_money(&has_bits);
          money_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MsgSevenResp::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fluyii_game.MsgSevenResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 player_id = 1;
  if (cached_has_bits & 0x00000008u) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_player_id(), target);
  }

  // required string player_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_player_name().data(), static_cast<int>(this->_internal_player_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "fluyii_game.MsgSevenResp.player_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_player_name(), target);
  }

  // repeated int32 records = 3;
  for (int i = 0, n = this->_internal_records_size(); i < n; i++) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_records(i), target);
  }

  // repeated .fluyii_game.MsgPlayer others = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_others_size()); i < n; i++) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(4, this->_internal_others(i), target, stream);
  }

  // required .fluyii_game.MsgFriend friend = 5;
  if (cached_has_bits & 0x00000002u) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, _Internal::friend_(this), target, stream);
  }

  // required double money = 6;
  if (cached_has_bits & 0x00000004u) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(6, this->_internal_money(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fluyii_game.MsgSevenResp)
  return target;
}

size_t MsgSevenResp::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:fluyii_game.MsgSevenResp)
  size_t total_size = 0;

  if (has_player_name()) {
    // required string player_name = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_player_name());
  }

  if (has_friend_()) {
    // required .fluyii_game.MsgFriend friend = 5;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *friend__);
  }

  if (has_money()) {
    // required double money = 6;
    total_size += 1 + 8;
  }

  if (has_player_id()) {
    // required int32 player_id = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_player_id());
  }

  return total_size;
}
size_t MsgSevenResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fluyii_game.MsgSevenResp)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required string player_name = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_player_name());

    // required .fluyii_game.MsgFriend friend = 5;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *friend__);

    // required double money = 6;
    total_size += 1 + 8;

    // required int32 player_id = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_player_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 records = 3;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->records_);
    total_size += 1 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_records_size());
    total_size += data_size;
  }

  // repeated .fluyii_game.MsgPlayer others = 4;
  total_size += 1UL * this->_internal_others_size();
  for (const auto& msg : this->others_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgSevenResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fluyii_game.MsgSevenResp)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgSevenResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MsgSevenResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fluyii_game.MsgSevenResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fluyii_game.MsgSevenResp)
    MergeFrom(*source);
  }
}

void MsgSevenResp::MergeFrom(const MsgSevenResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fluyii_game.MsgSevenResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  records_.MergeFrom(from.records_);
  others_.MergeFrom(from.others_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      player_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.player_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_friend_()->::fluyii_game::MsgFriend::MergeFrom(from._internal_friend_());
    }
    if (cached_has_bits & 0x00000004u) {
      money_ = from.money_;
    }
    if (cached_has_bits & 0x00000008u) {
      player_id_ = from.player_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MsgSevenResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fluyii_game.MsgSevenResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSevenResp::CopyFrom(const MsgSevenResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fluyii_game.MsgSevenResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSevenResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(this->others())) return false;
  if (has_friend_()) {
    if (!this->friend__->IsInitialized()) return false;
  }
  return true;
}

void MsgSevenResp::InternalSwap(MsgSevenResp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  records_.InternalSwap(&other->records_);
  others_.InternalSwap(&other->others_);
  player_name_.Swap(&other->player_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(friend__, other->friend__);
  swap(money_, other->money_);
  swap(player_id_, other->player_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgSevenResp::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace fluyii_game
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::fluyii_game::MsgInt64List* Arena::CreateMaybeMessage< ::fluyii_game::MsgInt64List >(Arena* arena) {
  return Arena::CreateInternal< ::fluyii_game::MsgInt64List >(arena);
}
template<> PROTOBUF_NOINLINE ::fluyii_game::MsgPlayer* Arena::CreateMaybeMessage< ::fluyii_game::MsgPlayer >(Arena* arena) {
  return Arena::CreateInternal< ::fluyii_game::MsgPlayer >(arena);
}
template<> PROTOBUF_NOINLINE ::fluyii_game::MsgFriend* Arena::CreateMaybeMessage< ::fluyii_game::MsgFriend >(Arena* arena) {
  return Arena::CreateInternal< ::fluyii_game::MsgFriend >(arena);
}
template<> PROTOBUF_NOINLINE ::fluyii_game::MsgSevenResp* Arena::CreateMaybeMessage< ::fluyii_game::MsgSevenResp >(Arena* arena) {
  return Arena::CreateInternal< ::fluyii_game::MsgSevenResp >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
